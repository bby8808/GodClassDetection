all clone group i ds.i type root.read input file.get all clone groups.get common path prefix.set current i type root.generate a s t information.
belonging clone group.location info.clone i d.source folder.package name.class name.i method signature.method signature.method name.containing class fully qualified name.original code fragment.get all source directories.get i document.get actual code fragment.get belonging clone group.set belonging clone group.get location info.update offsets.get status.get original code fragment.get clone i d.set clone i d.get source folder.set source folder.get package name.set package name.get class name.set class name.get method name.set method name.get method signature.set method signature.get i method signature.set i method signature.is subclone of.equals.hash code.to string.is class level clone.validate integrity.set containing class fully qualified name.get containing class fully qualified name.
file path.start offset.end offset.length.start line.start column.end line.end column.updated start offset.updated end offset.get clone tool parser.is white space character.read file contents.get lines.get number of chars for lines.get containing file path.get start offset.get end offset.get length.get start line.get start column.get end line.get end column.get containing file contents.update offsets.equals.hash code.to string.get clone location status.get updated start offset.get updated end offset.
results file.read input file.get if and ternary structure match list.match expression statement expressions.get ternary argument index.is same assignee.has one conditional expression.un block.unparenthesize.
document.read input file.get files id to path map.is updating variable.is same variable.is collection size invocation.is data structure size invocation.is length field access.is collection.is subclass of.is subinterface of.get variable declaration.get all variable declarations.find parent method declaration.get update value.get increment value.assignment update value.get integer value.is variable left operand.is variable right operand.un block.get variable initialized using control variable.get variable declarations and assignments containing access using variable.is access using variable.get occurrences of simple name.is expression an argument.
document.read input file.is delegate.is getter.is setter.create variable.process method invocation expression.get right most simple name.
java project.clone group map.name.arguments.enum name.enum constant declaration.hash code.get java project.add.iterator.get clone groups.get clone groups count.contains clone group.remove clones existing in file.update clones existing in file.set enum constant declaration.get enum constant declaration.get name.add argument.equals.set enum name.get enum name.equals.hash code.to string.
serial version u i d.markers.get markers.minimum.compute levenshtein distance.
root.complete expression.type variable expression map.type variable static field map.type variable subclass map.type method invocation expression map.type method invocation static field map.type method invocation subclass map.type.array access.put type variable expression.get target variables.get type variable expression.put type variable static field.get type variable static field.put type variable subclass.get type variable subclass.put type method invocation expression.get target method invocations.get type method invocation expression.put type method invocation static field.get type method invocation static field.put type method invocation subclass.get type method invocation subclass.process expression.process extended operands.get instanceof expressions.get infix expressions with equals operator.get remaining expression.all parent nodes are conditional and operators.all parent nodes are conditional or operators.get number of conditional operator nodes.get complete expression.to string.get type.get array access.set array access.
comment.text.type.start line.end line.hash code.type check elimination.type declaration.type check method.fields.methods.type variable counter map.type method invocation counter map.complex expression map.set comment.get comment.get text.get type.get start line.get end line.get i type root.get start position.get length.equals.hash code.to string.process type check code fragment.process type check code fragment branches.process remaining if statement expressions.extract operand.is valid type variable.is valid type method invocation.contains type variable key.contains type method invocation key.
set constructor invocation.get constructor invocation.insert columns.insert rows.insert.delete columns range.delete columns.delete rows range.delete rows.into.transpose.
normal font.highlight font.entity color.field.method.package.method to method color.no occurences.class color.class.class font.set method invocation.get method invocation.
type.name.simple name.hash code.variable binding key.get type.get name.get variable binding key.set simple name.get simple name.equals.equals.equals.hash code.to string.get move method refactoring opportunities.get extract class refactoring opportunities.get type check elimination refactoring opportunities.get extract method refactoring opportunities.process method.
class type.generic type.array dimension.hash code.pdg.method.boundary block.node criteria.local variable criterion.i file.method size.subgraph.slice nodes.passed parameters.indispensable nodes.removable nodes.get class type.get generic type.set generic.set array dimension.get array dimension.equals class type.equals generic type.equals.hash code.to string.extract type object.is nested inside.get throw statement nodes within region.get variable declarations and accessed fields in method.get method.get i file.get method size.get boundary block.get node criteria.get extracted method invocation insertion node.get local variable criterion.get slice nodes.get passed parameters.get removable nodes.get declaration of variable criterion.declaration of variable criterion belongs to slice nodes.declaration of variable criterion belongs to removable nodes.slice contains declaration.all node criteria are duplicated.return statement is control dependent on slice node.is control dependent on slice node.non duplicated slice node anti depends on non removable node.node depends on non removable node.non duplicated slice node output depends on non removable node.duplicated slice node with class instantiation has dependence on removable node.contains duplicate node with state changing method invocation.variable criterion is returned variable in original method.slice contains only one node criterion and declaration of variable criterion.declaration of variable criterion is duplicated.slice contains return statement.slice contains branch statement without innermost loop.comply with user thresholds.slice equals method body.variable criterion is stream closed in finally block.slice contains variable declaration closed in finally block.satisfies rules.
owner class.type.name. static.simple name.hash code.variable binding key.system object.examined project.jls.get owner class.get type.get name.get variable binding key.is static.set static.set simple name.get simple name.equals.hash code.to string.build project.get number of compilation units.get recursively inner types.parse a s t.parse a s t.process comments.process type declaration.process enum declaration.process field declaration.process method declaration.get system object.get examined project.get a s t.
set super method invocation.get super method invocation.get distance.union.intersection.
type.name.variable declaration.hash code.stop words.get type.get name.get variable declaration.set variable declaration.equals.equals.hash code.to string.find topics.get stop words.
p minimum slice size.p maximum slice size.p maximum duplication.p maximum ratio of duplicated to extracted.p minimum method size.p maximum call graph analysis depth.p enable alias analysis.p project compilation unit cache size.p library compilation unit cache size.p enable usage reporting.p enable source code reporting.p maximum number of source class members accessed by move method candidate.p maximum number of source class members accessed by extract class candidate.get array creation.set array creation.
type.name.varargs.single variable declaration.hash code.message dialog title.part.selection.pdg.selected method has no body.get type.get name.is varargs.set single variable declaration.get single variable declaration.equals.hash code.to string.get variable declaration.set active part.run.selection changed.
anonymous class declaration.class object.set anonymous class declaration.get anonymous class declaration.get class object.set class object.get i type root.get i file.get superclass.accessed field from this class.to string.compare.
parameter list.thrown exceptions.part.selection.method evolution.get class instance creation.set class instance creation.add parameter.get parameter list iterator.get parameter type list.get parameter list.add thrown exception.get thrown exceptions.to string.run.selection changed.set active part.
name.type.comment list. static.access.class name.fragment.hash code.data.candidates.set variable declaration fragment.get variable declaration fragment.set access.get access.get name.get type.add comment.add comments.get comment list iterator.is static.set static.generate field instruction.equals.set class name.get class name.equals.hash code.to string.get variable declaration.get candidates.set candidates.get data.set data.
sub types.message dialog title.part.selection.mapper.accept search match.run.wrong selection message.selection changed.set active part.
owner class.type.name. static.simple name.hash code.association list.acceptable origin class names.get owner class.get type.get name.is static.set static.set simple name.get simple name.equals.hash code.to string.contains field object.get associations of class.generate associations.check collection attribute.check for container association.check full path for container association.check path for container association.recurse.get associations ending to.get association.
literal type.value.type.literal.hash code.object slice union map.get literal type.get value.get type.get literal.equals.hash code.to string.get slice unions.
i type root.start position.length.node type.hash code.composite statement.recover a s t node.get i type root.get start position.get length.equals.hash code.get composite statement.generate type check eliminations.get field instructions.get super field instructions.get local variable declarations.get local variable instructions.get method invocations.get super method invocations.get constructor invocations.get creations.get literals.get anonymous class declarations.get exceptions in throw statements.contains method invocation.contains field instruction.contains super method invocation.get invoked methods through fields.get invoked methods through parameters.get non distinct invoked methods through fields.get non distinct invoked methods through parameters.get invoked methods through local variables.get invoked methods through this reference.get non distinct invoked methods through this reference.get invoked static methods.get defined fields through fields.get used fields through fields.get non distinct defined fields through fields.get non distinct used fields through fields.get defined fields through parameters.get used fields through parameters.get non distinct defined fields through parameters.get non distinct used fields through parameters.get defined fields through local variables.get used fields through local variables.get defined fields through this reference.get non distinct defined fields through this reference.get used fields through this reference.get non distinct used fields through this reference.get declared local variables.get defined local variables.get used local variables.get parameters passed as arguments in method invocations.get parameters passed as arguments in super method invocations.get parameters passed as arguments in constructor invocations.contains super method invocation.contains super field access.process statement.get try statements.string representation.
from.to.container.field object.defined variables.used variables.thrown exception types.variable declarations in method.maximum call graph analysis depth.get field object.get to.get from.is container.set container.equals.to string.process arguments of internal method invocation.process argument of internal method invocation.process argument of external method invocation.get argument position.process internal method invocation.process external method invocation.exact sub type.get invoked method declaration.handle already analyzed method.compose variable.extract type declarations.extract anonymous class declarations.equal type.equal signature.equal signature ignoring subclass type differences.get matching method declarations for sub type.is unprocessed method.
generate qualified type from type binding.create qualified parameterized type.generate type from type binding.create parameterized type.generate wrapper type for primitive type binding.get simple type bindings.contains type binding.has qualified type.extract type.is qualified type.find field declaration.find getter declaration for field.find declaring type declaration.find declaring type declaration.find type declaration.find compilation unit.needs qualifier.is array length qualified name.is enum constant in switch case expression.implements serializable interface.is serialized field.
slice union map.src.dst.get slice unions.get src.get dst.
declared variables.defined variables.used variables.created types.thrown exception types.method call analyzer.key 1.key 2.get declared variable iterator.get defined variable iterator.get used variable iterator.defines local variable.uses local variable.throws exception.determine defined and used variables.process arguments of internal method invocation.process arguments of internal class instance creation.get key 1.get key 2.equals.hash code.to string.
pdg.method.boundary block.all node criteria.object reference.i file.method size.subgraph.slice nodes.passed parameters.indispensable nodes.removable nodes.edge g 1.edge g 2.hash code.is nested inside.get throw statement nodes within region.get variable declarations and accessed fields in method.get method.get i file.get method size.get boundary block.get extracted method invocation insertion node.get object reference.get slice nodes.get passed parameters.get removable nodes.get declaration of object reference.declaration of object reference belongs to slice nodes.declaration of object reference belongs to removable nodes.slice contains declaration.all node criteria are duplicated.return statement is control dependent on slice node.is control dependent on slice node.non duplicated slice node anti depends on non removable node.node depends on non removable node.non duplicated slice node output depends on non removable node.duplicated slice node with class instantiation has dependence on removable node.contains duplicate node with state changing method invocation.object slice equals method body.object slice has minimum size.object reference is returned variable in original method.declaration of object reference is duplicated.slice contains return statement.slice contains branch statement without innermost loop.comply with user thresholds.variable criterion is stream closed in finally block.slice contains variable declaration closed in finally block.satisfies rules.get edge g 1.get edge g 2.is compatible.equal data.equals.hash code.to string.
basic blocks.forward reachable blocks.binding 1.binding 2.has qualified type.get basic blocks.forward reachable blocks.get binding 1.get binding 2.has qualified type.get variable binding key pair.equals.hash code.to string.
sub tree mappers.suggestion.precondition violation.get sub tree mappers.get c d t nodes in breadth first order.generate control dependence sub tree.generate control dependence sub tree with the first node as root.add node in order.insert c d t node in tree.insert c d t node in tree after sibling.get sub tree c d t node.all nodes nested under else.is nested under else.get control parent.get parent.all statements are in anonymous class declaration or catch clause or finally block.is nested under anonymous class declaration or catch clause or finally block.is finally block of try statement.get sub tree c d t nodes.is inside.has only key word.get p d g.get i method.recursive get i method.get i method with signature.get precondition violation.get suggestion.set suggestion.
control statement list.statement list.get statement list.get control statement list.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.compare.
i compilation unit 1.i compilation unit 2.solutions.identical node map.process top down.second phase.get solutions.is subsumed by current solutions.get maximum complete sub tree matches.find top down matches.get identical node map.
pdg.root.first value.second value.type.weight.hash code.get root.process control dependences.check if try node is nested under other try node or else.search for node.search for else node.number of outgoing false control dependences.is expression statement with conditional expression.get type.get first value.get second value.get weight.set weight.equals.hash code.to string.
bottom up sub tree matches.sub tree mappers.object node map.add node in order.generate control dependence sub tree.insert c d t node in tree.insert c d t node in tree after sibling.get bottom up sub tree matches.get sub tree mappers.get object node map.get nodes defining attributes of reference.get node declaring reference.get declared variables.get defined field map.
pdg 1.pdg 2.i compilation unit 1.i compilation unit 2.mapped nodes g 1.mapped nodes g 2.non mapped nodes g 1.non mapped nodes g 2.common passed parameters.declared local variables in mapped nodes.declared local variables in mapped nodes within anonymous class.directly accessed local fields g 1.directly accessed local fields g 2.indirectly accessed local fields g 1.indirectly accessed local fields g 2.directly modified local fields g 1.directly modified local fields g 2.indirectly modified local fields g 1.indirectly modified local fields g 2.directly accessed local methods g 1.directly accessed local methods g 2.indirectly accessed local methods g 1.indirectly accessed local methods g 2.precondition violations.renamed variables.renamed fields.variables to be returned g 1.variables to be returned g 2.non mapped p d g nodes g 1 movable before.non mapped p d g nodes g 1 movable after.non mapped p d g nodes g 1 movable before and after.non mapped p d g nodes g 2 movable before.non mapped p d g nodes g 2 movable after.non mapped p d g nodes g 2 movable before and after.additionally matched nodes g 1.additionally matched nodes g 2.declared local variables in additionally matched nodes g 1.declared local variables in additionally matched nodes g 2.clone structure root.final state.all nodes in sub tree p d g 1.all nodes in sub tree p d g 2.clone refactoring type.declared variables in remaining nodes defined by mapped nodes g 1.declared variables in remaining nodes defined by mapped nodes g 2.id 1.id 2.get clone structure root.get maximum state with minimum differences.get all nodes in sub tree p d g 1.get all nodes in sub tree p d g 2.find non mapped nodes.find declared variables in remaining nodes defined by mapped nodes.find declared variables in mapped nodes used by non mapped nodes.find passed parameters.common passed parameters already contain one of the keys.sort variables.appears in multiple differences.appears only in differences 1.appears only in differences 2.appears only as part of differences 1.appears only as part of differences 2.is inside difference.find renamed variable name 1.find renamed variable name 2.extract passed parameters.get variable binding.find locally accessed fields.get all super types up to common superclass.get additional locally accessed fields and methods.get p d g 1.get p d g 2.get method name 1.get method name 2.get removable nodes g 1.get removable nodes g 2.get remaining nodes g 1.get remaining nodes g 2.get non mapped p d g nodes g 1 movable before.get non mapped p d g nodes g 1 movable after.get non mapped p d g nodes g 2 movable before.get non mapped p d g nodes g 2 movable after.get additionally matched nodes g 1.get additionally matched nodes g 2.get variables to be returned g 1.get variables to be returned g 2.get declared variables in remaining nodes defined by mapped nodes g 1.get declared variables in remaining nodes defined by mapped nodes g 2.get directly accessed local fields g 1.get directly accessed local fields g 2.get indirectly accessed local fields g 1.get indirectly accessed local fields g 2.get directly modified local fields g 1.get directly modified local fields g 2.get indirectly modified local fields g 1.get indirectly modified local fields g 2.get accessed local methods g 1.get accessed local methods g 2.get directly accessed local methods g 1.get directly accessed local methods g 2.get indirectly accessed local methods g 1.get indirectly accessed local methods g 2.get declared local variables in mapped nodes.get declared local variables in mapped nodes within anonymous class.get declared local variables in additionally matched nodes g 1.get declared local variable binding keys in additionally matched nodes g 1.get declared local variables in additionally matched nodes g 2.get declared local variable binding keys in additionally matched nodes g 2.get common passed parameters.get node differences.get sorted node differences.get non overlapping node differences.find renamed variables.already contains one of the keys.get additionally matched fragments not being under mapped statement.get variables.get binding signature pair for variable 1.get binding signature pair for variable 2.get precondition violations.get renamed variables.get renamed variable bindings.variables to be returned.is assignment to array access.mapped node declares variable.check preconditions about returned variables.check if all possible execution flows end in return.get all nodes in clone block.contain switch case.find switch case before.find switch case after.extract conditional return statements.extract return statements after id.conditional return statement.branch statement with innermost loop.switch case statement with innermost switch.check if statement is super constructor invocation.check if statement is this constructor invocation.check if statement contains super method invocation.check clone structure node for preconditions.check preconditions.get declared methods.get declared fields.is variable with type mismatch difference.find methods called from type.check difference for method argument passing.process non mapped node.is the only unmapped node inside mapped try block.control parent examines variable used in non mapped node.control parent examines variable used in difference expression.control parent examines variable in condition.process non mapped nodes movable before and after.examine if non mapped nodes update the same variable.movable non mapped node before non mapped nodes movable after.movable before first mapped node.is first non mapped node.movable non mapped node before first mapped node.is last non mapped node.movable non mapped node after last mapped node.is void method call.is method call difference covering entire statement.is field update.is updated.is field.is parameterizable expression.expression uses variable whose state is modified by previous statements.is advanced match node.is expression under statement.is expression within expression.get method binding.get clone type.is type 3.get clone refactoring type.is template method applicable.compute refactoring type.infeasible refactoring.pull up to common superclass.superclass directly inherited from refactored subclasses.superclass is one of refactored subclasses.superclass inherited only by refactored subclasses.extract to utility class.clone fragments do not access fields or methods.extract simple names.extract simple names.extract method invocations.extract method invocations.extract this expressions.extract this expressions.all accessed local methods have matching signatures.get return type binding.extract type binding.find return type binding.determine type.extract return type binding.hash code.equals.
switch case node map.expression 1.expression 2.differences.binding signature pair.get switch case node map.get differences.get expression 1.get expression 2.get binding signature pair.add difference.contains difference type.contains only difference type.is parameterizable.type mismatch.is variable type mismatch.is expression of if statement nested at level zero.is qualifier of qualified name.is expression of field access.is empty.is parent node difference of.is parent.is left hand side of assignment.get parent expression of method name or type name.get weight.hash code.equals.to string.
children.node mappings.visited edges g 1.restricted nodes g 1.restricted nodes g 2.updater.update value.set restricted nodes g 1.set restricted nodes g 2.add child.get mapped nodes g 1.get mapped nodes g 2.get node differences.get sorted node differences.get non overlapping node differences.get distinct difference count.get distinct difference count including type mismatches.get non distinct difference count.get non distinct difference count including type mismatches.get node mapping relative id diff.get edit distance of differences.get maximum common sub graphs.clear.contains same state.get leaves.get node mapping size.get size.traverse.nodes declare variable used in mapped nodes.edge mapping with already visited nodes.prune branch.symmetrical if nodes.mapped control parents.incoming data dependencies from unvisited nodes.node is unmapped temporary variable declaration.incoming data dependencies from non matching nodes.find node declaring variable.find mapping with both nodes.find mapping with node g 1.find mapping with node g 2.contains both nodes in mappings.contains node g 1 in mappings.contains node g 2 in mappings.get child state with node mapping.contains at least one node in mappings.contains node in mappings.get node mappings.get sorted node mappings.same node mappings.equals.to string.get updater.get update value.match.
parent.node.level.children.if parent.else if child.is else node.is ternary.entity index map.class index map.entity list.class list.entity map.class map.system.maximum number of source class members accessed by move method candidate.maximum number of source class members accessed by extract class candidate.parent child relationship.if else relationship.get node.get node.get else node.get control predicate nodes in level.get else nodes in level.get max level.get root.is leaf.get leaves.if statement inside else if chain.get number of if parents.get number of else if children.get length of else if chain.get if parents.get else if children.is else node.set else node.is ternary.set ternary.get siblings.get previous sibling.are all siblings leaves.get control dependence tree nodes in level.shallow copy.get parent.get node.get level.get children.get descendants.get node count.get nodes in breadth first order.get if parent.set if parent.get else if child.set else if child.set if parent and else if child.hash code.equals.to string.get id.get else child.generate distances.identify conceptual bindings.target class inherited by another candidate target class.get move method candidate refactorings by access.compute access map.get extract class candidate refactorings.get jaccard distance matrix.
match pairs.class map.association detection.system object.get match pairs.get additional fragments 1.get additional fragments 2.is advanced match.get control dependence tree nodes 1.get control dependence tree nodes 2.add start point.subsumes.to string.generate system.generate system with static members.get class iterator.get class.add class.remove class.get system object.get associations of class.contains association with multiplicity between classes.
i compilation unit 1.i compilation unit 2.solutions.force top down match for sibings.class origin.class type.name.reference.process bottom up.contains sibling match.contains match.is subsumed by current solutions.get solutions.find bottom up matches.if statements with equal else if chains.if statement with single else against ternary operator.already mapped.is reference.set reference.get class origin.set class origin.get class type.get name.equals.to string.
consolas bold font.apply styles.compare.
tahoma normal font.apply styles.instance of.
binding keys.get occurrences.contains binding.contains only binding.signature without methods.get size.get length.equals.hash code.to string.initialize default preferences.
signature 1.signature 2.is gap.root node.system object.get signature 1.get signature 2.set gap.is reverse.get weight.equals.hash code.to string.get delegations.exists node.exists node.get depth.get delegation path list.
binding keys.get binding keys.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.visit.handle expression.handle type.handle parameters.instance of.
delegation path list.from version.to version.get all delegation paths.get delegation paths of size.get from version.get to version.to string.
subclass map.root.primary.connections.connection list.add subclass to superclass.generate inheritance hierarchies.get tree.recursively construct tree.get roots.get matching trees.get root.
inheritance tree list.name.superclass.attribute list.method list.class object.hash code.get inheritance tree list.generate inheritance trees.extends or implements.get tree.get leaves in deepest levels.get name.get superclass.set superclass.get class object.set class object.add attribute.get attribute.get method.get method.get method list.add method.remove method.remove attribute.get attribute list.get attribute iterator.get method iterator.get entity set.equals.hash code.to string.
inheritance tree list.root.primary.connections.canvas.get inheritance tree list.generate inheritance trees.get tree.create diagram.
class cohesion map.tokens.class cohesion.use common field or one invokes the other.get system average connectivity.compare to.to string.
system.import coupling map.index.stack.list.scc.calculate coupling.get class average coupling.get system average coupling.tarjan.belong to the same strongly connected component.
lcom 2 map.lcom 3 map.project version pair.percentage.class l c o m.get system average l c o m 2.get system average l c o m 3.get project version pair.get percentage.
super method invocations.visit.get super method invocations.instance of.
instance checker.camel case pattern.humanised string.acronym.get variable instructions.get variable instructions.get method invocations.get super method invocations.get method invocations.get super method invocations.get field accesses.get super field accesses.get field accesses.get super field accesses.get class instance creations.get class instance creations.get array creations.get array creations.get array accesses.get array accesses.get this expressions.get this expressions.get type literals.get literals.get literals.get cast expressions.get infix expressions.get infix expressions.get instanceof expressions.get instanceof expressions.get assignments.get assignments.get postfix expressions.get postfix expressions.get prefix expressions.get prefix expressions.get variable declaration expressions.get variable declaration expressions.get conditional expressions.get conditional expressions.get variable modifiers.get variable modifiers.get all expressions.get expressions.get expressions.get expressions.humanise.camel case word matcher.reset.add to acronym.append word.append acronym if there is one.capitalise first letter.
type bindings.instance of.visit.visit.visit.visit.get type bindings.
instance of.instance of.
type bindings.types.instance of.visit.visit.get type bindings.get types.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance checker.get constructor invocations.get variable declaration statements.get branching statements.get try statements.get switch statements.get if statements.get return statements.get break statements.get continue statements.get enhanced for statements.get for statements.get while statements.get do statements.get type declaration statements.get statements.get total number of statements.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
instance of.instance of.
adjacencies.instance of.add edge.get adjacent.reverse edge.reverse graph.get reversed list.get source node set.get all edges.
instance of.get insets.paint.
id.instance of.run.dispose.
instance of.create information control.is supported.
instance of.create information control.is supported.
internal method invocation map.external method invocation map.internal field read map.internal field write map.external field read map.external field write map.extracted methods.extracted fields.source class.proposals.insert to map.insert to map.is invocation to extracted method.is access to extracted field.find field instruction.get internal method invocation map.get external method invocation map.get internal field read map.get internal field write map.get external field read map.get external field write map.get extracted methods.get extracted fields.get source class.to string.method call map to string.field access map to string.get distinct target dependencies.get distinct source dependencies.contains non accessed field in extracted class.get proposals.
diagram.class figure.statement i d.slice coverage map.mouse pressed.mouse released.mouse double clicked.get statement i d.put.get value.statement belongs to all slices.
compare.is valid.
instance.get instance.element changed.process delta.is valid.
conditional loop a s t node matcher.is infix expression with composite parent.match.compare types.
differences.type root 1.type root 2.additionally matched fragments 1.additionally matched fragments 2.a s t node matcher.match.add difference.get differences.get type root 1.get type root 2.get additionally matched fragments 1.get additionally matched fragments 2.to string.is parameterizable.method invocation match with missing expression and different name and different arguments.only variable type mismatch differences.is type holder.get type binding.type binding match.subclass type mismatch.is number primitive type.valid common super type.is tagging interface.common super type.implements interface.add type binding.get all super types.is infix expression with composite parent.process class instance creation arguments.process method invocation arguments.overloaded methods.is expression within method invocation argument.match.match.match.match.match.match.match.match.match.reduce weight of reversed arguments.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.setter replaced with field assignment.field assignment replaced with setter.getter method for field.setter method for field.is nested under anonymous class declaration.is finally block of try statement.has empty initializer.loop match.get occurrences of simple name.generate abstract loop.report additional fragments.if match.generate abstract control structure.report additional fragments.report additional fragments.
statement list.expression list.my composite statement.my composite statement.add statement.get statement iterator.add expression.get expression iterator.set attribute instruction reference.get abstract statement.update.add attribute instruction in statements or expressions containing method invocation.insert method invocation before statement.remove statement.replace sibling statements with method invocation.remove all statements except from sibling statements.get entity set.
c f g throw node.
is default.c f g switch case node.is default.
root.primary.connections.connection list.god class diagram 2.get root.
statement list.expression list.my composite statement.my composite statement.add statement.get statement iterator.add expression.get expression iterator.set attribute instruction reference.get abstract statement.update.add attribute instruction in statements or expressions containing method invocation.insert method invocation before statement.remove statement.replace sibling statements with method invocation.remove all statements except from sibling statements.get entity set.
method similarity map.method change map.method code map.method evolution.get string representation.edit distance.get similarity entries.get change entries.get code.
concept clusters.concept entities.source class.topics.extracted concept.get topics.get source class.get concept entities.get concept clusters.add concept cluster.find topics.compare to.
true control dependence.hash code.p d g control dependence.is true control dependence.is false control dependence.same label.equals.hash code.to string.
position.clone diff styled label provider.update.set cell background without code.set cell background with code.generate styled string.generate styled string for gap.generate styled string for else gap.get tool tip text.get tool tip shift.get tool tip location.get tool tip display delay time.get tool tip time displayed.
refactoring.parent package.parent package class names.java lang class names.text map.default naming map.extract class input page.create control.handle input changed.
control parent.c f g block node.get control parent.set control parent.
returned variable.p d g exit node.get returned variable.
true control dependence.hash code.p d g control dependence.is true control dependence.is false control dependence.same label.equals.hash code.to string.
control parent.p d g block node.get control dependence parent.determine defined and used variables.
expression.expression precondition violation.get expression.get violation.get styled violation.
statement list.expression list.my composite statement.my composite statement.add statement.get statement iterator.add expression.get expression iterator.set attribute instruction reference.get abstract statement.update.add attribute instruction in statements or expressions containing method invocation.insert method invocation before statement.remove statement.replace sibling statements with method invocation.remove all statements except from sibling statements.get entity set.
id.root.root 2.is freeform.zoom input action.zoom input action.run.dispose.
class origin.method name.return type.parameter list.method body.is abstract.access.method object.hash code.my method.set method object.get method object.get access.set access.set method body.generate method invocation.is abstract.set abstract.contains parameter.set class origin.remove parameter.add parameter.get class origin.get method name.set method name.get return type.get parameter list.set attribute instruction reference.get abstract statement.get method invocation iterator.get attribute instruction iterator.get number of attribute instructions.get number of method invocations.get number of parameters.equals.equals.hash code.to string.get entity set.get full entity set.
class origin.method name.return type.parameter list.method body.is abstract.access.method object.hash code.my method.set method object.get method object.get access.set access.set method body.generate method invocation.is abstract.set abstract.contains parameter.set class origin.remove parameter.add parameter.get class origin.get method name.set method name.get return type.get parameter list.set attribute instruction reference.get abstract statement.get method invocation iterator.get attribute instruction iterator.get number of attribute instructions.get number of method invocations.get number of parameters.equals.equals.hash code.to string.get entity set.get full entity set.
get children.get parent.has children.
input text.class name.search dialog.create.create dialog area.is resizable.save input.get initial size.ok pressed.get class name.
id.root.root 2.is freeform.zoom input action.zoom input action.run.dispose.
scale.proportional flow layout.calculate preferred size.
symmetrical if node pair.hash code.p d g else mapping.get node g 1.get node g 2.get node differences.is advanced match.get symmetrical if node pair.set symmetrical if node pair.equals.hash code.to string.
relevant project map.project evolution.get project entries.
refactoring.text map.default naming map.move method input page.create control.handle input changed.
num of attributes.num of methods.name.original tooltip.candidates.is selected.original color.original border.is inner class.max num.min num.p m class figure.calculate size.set m a x n u m.set m i n n u m.compare to.draw.number of classes.get candidates.set candidates.get name.to string.get original color.is selected.set selected.set original background color.get original tooltip.set original tooltip.set to original state.get original border.set original border.is inner class.set inner class.
p d g output dependence.
class origin.class type.name.method list.reference.access.field object.hash code.my attribute.get field object.set field object.get access.set access.generate attribute instruction.set class origin.get class origin.get name.set class type.get class type.is reference.set reference.add method.get method iterator.equals.equals.hash code.to string.get entity set.get full entity set.
input page font.refactoring.action.my refactoring wizard.add user input pages.perform finish.
hash code.p d g else gap.get node g 1.get node g 2.get node differences.equals.hash code.to string.
invoker 1.invoker 2.argument 1.argument 2.field 1.field 2.setter method name.invoker differences.argument differences.field assignment replaced with setter invocation difference.get setter method name.get invoker differences.add invoker difference.get argument differences.add argument difference.get invoker 1.set invoker 1.get invoker 2.set invoker 2.get argument 1.set argument 1.get argument 2.set argument 2.get field 1.set field 1.get field 2.set field 2.
cluster set.hierarchical.clustering.
diagram.package map diagram information provider.get information.get area.
p d g anti dependence.
diagram.package map diagram information provider.get information.get area.
pdg.method.boundary block.node criterion.local variable criterion.slice nodes.remaining nodes.passed parameters.indispensable nodes.removable nodes.returned variables in original method.i file.method size.p d g slice.p d g slice.get variable declarations and accessed fields in method.get method.get i file.get method size.get boundary block.get extracted method invocation insertion node.get node criterion.get local variable criterion.get slice nodes.get passed parameters.get removable nodes.node belongs to block based region.edge belongs to block based region.get declaration of variable criterion.declaration of variable criterion belongs to slice nodes.declaration of variable criterion belongs to removable nodes.node criterion is duplicated.satisfies rules.slice contains branch statement without innermost loop.slice contains return statement.declaration of variable criterion is duplicated.return statement is control dependent on slice node.is control dependent on slice node.non duplicated slice node anti depends on non removable node.node depends on non removable node.non duplicated slice node output depends on non removable node.duplicated slice node with class instantiation has dependence on removable node.node critetion is declaration of variable criterion.variable criterion is returned variable in original method.contains duplicate node with state changing method invocation.slice contains declaration.compute slice.compute slice.get def nodes.traverse backward.to string.
variable node.data structure access expression.control variable.get variable.get data structure access expression.get condition containing variable.get start value.set method invocation start value.get value contributing modifiers.get all variable modifiers in parent method.get end value.get iterator data structure expression.get variable updaters.get all first level updaters.remove expressions in a conditional expression.
qualified type 1.qualified type 2.uncommon superclass precondition violation.get violation.get styled violation.
refactoring id.source compilation unit.source type declaration.source file.extracted field fragments.extracted methods.delegate methods.extracted type name.extract class refactoring descriptor.create refactoring.
node g 1.node g 2.matcher.node differences.additionally matched fragments 1.additionally matched fragments 2.symmetrical if node pair.symmetrical if else.hash code.p d g node mapping.get node g 1.get node g 2.get node differences.is advanced match.get additionally matched fragments 1.get additionally matched fragments 2.contains additionally matched fragment 1.contains additionally matched fragment 2.get type root 1.get type root 2.get symmetrical if node pair.set symmetrical if node pair.is symmetrical if else.set symmetrical if else.is false control dependent.is node 1 false control dependent.is node 2 false control dependent.is nested under else.matching variable difference.is void method call difference covering entire statement.declares inconsistently renamed variable.declares variable with variable name mismatch.equals.hash code.to string.
tool tip canvas.class figure.god class information control.has contents.set input.set input.create content.compute size hint.
my combo box cell editor.create control.
returned variable.thrown exceptions.type variable.type method invocation.replace conditional with polymorphism.apply.modify client.set public modifier to source type declaration.modify inheritance hierarchy.replace cast expression with this expression.get recursively inner types.modify subclass method invocations.get required import declarations based on signature.get required import declarations based on branch.check final conditions.check initial conditions.create change.get name.
conditional expression.condition.then expression.else expression.ternary control structure.ternary control structure.initialize fields.get conditional expression.get condition.get then expression.get else expression.match.match.match.get additional fragments.
p d g data dependence.
label.inner most loop node.c f g continue node.get label.is labeled.get inner most loop node.set inner most loop node.
invoker 1.invoker 2.argument 1.argument 2.field 1.field 2.setter method name.invoker differences.argument differences.field assignment replaced with setter invocation difference.get setter method name.get invoker differences.add invoker difference.get argument differences.add argument difference.get invoker 1.set invoker 1.get invoker 2.set invoker 2.get argument 1.set argument 1.get argument 2.set argument 2.get field 1.set field 1.get field 2.set field 2.
my statement.my statement.
figure.entity figure listener.mouse dragged.mouse entered.mouse exited.mouse hover.mouse moved.
returned variables g 1.returned variables g 2.returned variable precondition violation.get violation.get styled violation.
refactoring.parent package.parent package class names.java lang class names.text map.default naming map.replace type code with state strategy input page.create control.handle input changed.
p d g control predicate node.determine defined and used variables.
loopback flow.true control flow.false control flow.flow.is loopback flow.set loopback flow.is true control flow.set true control flow.is false control flow.set false control flow.to string.
differences.type root 1.type root 2.additionally matched fragments 1.additionally matched fragments 2.a s t node matcher.match.add difference.get differences.get type root 1.get type root 2.get additionally matched fragments 1.get additionally matched fragments 2.to string.is parameterizable.method invocation match with missing expression and different name and different arguments.only variable type mismatch differences.is type holder.get type binding.type binding match.subclass type mismatch.is number primitive type.valid common super type.is tagging interface.common super type.implements interface.add type binding.get all super types.is infix expression with composite parent.process class instance creation arguments.process method invocation arguments.overloaded methods.is expression within method invocation argument.match.match.match.match.match.match.match.match.match.reduce weight of reversed arguments.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.setter replaced with field assignment.field assignment replaced with setter.getter method for field.setter method for field.is nested under anonymous class declaration.is finally block of try statement.has empty initializer.loop match.get occurrences of simple name.generate abstract loop.report additional fragments.if match.generate abstract control structure.report additional fragments.report additional fragments.
class origin.class type.name.method list.reference.access.field object.hash code.my attribute.get field object.set field object.get access.set access.generate attribute instruction.set class origin.get class origin.get name.set class type.get class type.is reference.set reference.add method.get method iterator.equals.equals.hash code.to string.get entity set.get full entity set.
hash code.p d g else gap.get node g 1.get node g 2.get node differences.equals.hash code.to string.
expression 1.expression 2.dual expression precondition violation.get expression 1.get expression 2.get violation.get styled violation.
selected clone detector type.basic input file.secondary input file.import clones wizard page.create control.initialize basic file input.initialize secondary file input.get selected clone detector type.get basic input file.get secondary input file.
expression 1.expression 2.dual expression precondition violation.get expression 1.get expression 2.get violation.get styled violation.
slice.source compilation unit.source type declaration.source method declaration.compilation unit change.exception types that should be thrown by extracted method.extract method refactoring.get slice.get extracted method name.set extracted method name.process try statement.apply.modify source method.get block rewrite.extract method.process statement node.check final conditions.check initial conditions.create change.get name.
c f g branch do loop node.get join node.get nested basic blocks.
java project.import clones wizard page.clone group list.import clones wizard.get clone group list.add pages.perform finish.
tool tip canvas.class figure.god class information control.has contents.set input.set input.create content.compute size hint.
id.root.root 2.is freeform.zoom input action.zoom input action.run.dispose.
common super type.common super type members.dual expression with common super type precondition violation.get violation.get styled violation.
extraction.duplication.slice annotation.
statement list.expression list.my composite statement.my composite statement.add statement.get statement iterator.add expression.get expression iterator.set attribute instruction reference.get abstract statement.update.add attribute instruction in statements or expressions containing method invocation.insert method invocation before statement.remove statement.replace sibling statements with method invocation.remove all statements except from sibling statements.get entity set.
statement.statement precondition violation.get statement.get violation.get styled violation.
very low severity color.low severity color.moderate severity color.high severity color.highest severity color.default color.root.primary.project name.key map.all class figures.has sub packages.min depth.max.min.selected class.package map diagram.get root.calculate severity color.calculate depth color.calculate depth.get all class figures.get selected class.set selected class.get project name.create class figure.create smelly class.
control parent.c f g block node.get control parent.set control parent.
common super type.common super type members.dual expression with common super type precondition violation.get violation.get styled violation.
differences.type root 1.type root 2.additionally matched fragments 1.additionally matched fragments 2.a s t node matcher.match.add difference.get differences.get type root 1.get type root 2.get additionally matched fragments 1.get additionally matched fragments 2.to string.is parameterizable.method invocation match with missing expression and different name and different arguments.only variable type mismatch differences.is type holder.get type binding.type binding match.subclass type mismatch.is number primitive type.valid common super type.is tagging interface.common super type.implements interface.add type binding.get all super types.is infix expression with composite parent.process class instance creation arguments.process method invocation arguments.overloaded methods.is expression within method invocation argument.match.match.match.match.match.match.match.match.match.reduce weight of reversed arguments.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.match.setter replaced with field assignment.field assignment replaced with setter.getter method for field.setter method for field.is nested under anonymous class declaration.is finally block of try statement.has empty initializer.loop match.get occurrences of simple name.generate abstract loop.report additional fragments.if match.generate abstract control structure.report additional fragments.report additional fragments.
section one.section two.section three.section compartment.get section one.get section two.get section three.
left anchor.get location.
true control dependence.hash code.p d g control dependence.is true control dependence.is false control dependence.same label.equals.hash code.to string.
returned variable.c f g exit node.get returned variable.
tool tip canvas.class figure.feature envied method information control.has contents.set input.set input.create content.compute size hint.
field figure.method figure.extract method figure.method section compartment.field section compartment.class figure.add three compartments.add two compartments.add field compartment.add method compartment.add method section compartment.add field section compartment.get field section compartment.get method section compartment.get fields compartment.get methods compartment.get extract method compartment.
